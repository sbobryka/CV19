<Window x:Class="CV19.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CV19"
        xmlns:vm="clr-namespace:CV19.ViewModels"
        xmlns:dec="clr-namespace:CV19.Models.Decanat"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:fa="http://schemas.fontawesome.com/icons/"
        xmlns:oxy="http://oxyplot.org/wpf"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:view="clr-namespace:CV19.Views"
        mc:Ignorable="d"
        Title="{Binding Path=Title}" Height="450" Width="800"
        WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <fa:FontAwesome Icon="Regular_FileAlt" x:Key="Regular_FileAlt" Foreground="Blue"/>
        <fa:FontAwesome Icon="Regular_FolderOpen" x:Key="Regular_FolderOpen" Foreground="Blue"/>
        <fa:FontAwesome Icon="Solid_DoorOpen" x:Key="Solid_DoorOpen" Foreground="Blue"/>
        <fa:FontAwesome Icon="Regular_QuestionCircle" x:Key="Regular_QuestionCircle" Foreground="Green"/>
        <fa:ImageAwesome Icon="Solid_Search" x:Key="Solid_Search" Foreground="Green" Height="25" Margin="0,0,5,0" DockPanel.Dock="Left"/>
    </Window.Resources>
    <Window.DataContext>
        <vm:ViewModelMainWindow/>
    </Window.DataContext>
    <Window.InputBindings>
        <KeyBinding Modifiers="Alt" Key="Q" Command="{Binding Path=CloseApplicationCommand}"/>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top" Padding="5">
            <MenuItem Header="Файл" Icon="{StaticResource Regular_FileAlt}">
                <MenuItem Header="Открыть" Icon="{StaticResource Regular_FolderOpen}"/>
                <MenuItem Header="Выход" Icon="{StaticResource Solid_DoorOpen}" InputGestureText="Alt+Q" Command="{Binding Path=CloseApplicationCommand}"/>
            </MenuItem>
            <MenuItem Header="Справка" Icon="{StaticResource Regular_QuestionCircle}">
                <MenuItem Header="Помощь"/>
                <MenuItem Header="О программе"/>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" Padding="5">
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="{Binding Path=Status}"/>
            </StatusBarItem>
        </StatusBar>
        <TabControl>
            <TabItem Header="Графики">
                <view:CountriesStatisticView DataContext="{Binding Path=CountriesStatisticViewModel}"/>
            </TabItem>
            <TabItem Header="Файловая система">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Column="0" Header="Каталоги" Padding="5">
                        <GroupBox.Resources>
                            <HierarchicalDataTemplate DataType="{x:Type vm:DirectoryViewModel}" ItemsSource="{Binding Path=SubDirectories}">
                                <StackPanel Orientation="Horizontal">
                                    <fa:ImageAwesome Icon="Solid_Folder" Foreground="DarkGoldenrod" Height="12" Margin="0,0,5,0"/>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </StackPanel>
                            </HierarchicalDataTemplate>
                        </GroupBox.Resources>
                        <TreeView x:Name="DirectoryTreeView" ItemsSource="{Binding Path=RootDirectoriesDisk.SubDirectories}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectedItemChanged">
                                    <i:InvokeCommandAction Command="{Binding Path=SelectDirectoryCommand}" CommandParameter="{Binding ElementName=DirectoryTreeView, Path=SelectedItem}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TreeView>
                    </GroupBox>
                    <GridSplitter Grid.Column="1" Width="3" ShowsPreview="False" HorizontalAlignment="Center"/>
                    <GroupBox Grid.Column="2" Header="{Binding Path=SelectedDirectory.Name, FallbackValue='Каталог не выбран'}" Padding="5">
                        <GroupBox.Resources>
                            <DataTemplate DataType="{x:Type vm:FileViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <fa:ImageAwesome Icon="Regular_FileAlt" Foreground="Gray" Height="12" Margin="0,0,5,0"/>
                                    <TextBlock Text="{Binding Path=Name}"/>
                                </StackPanel>
                            </DataTemplate>
                        </GroupBox.Resources>
                        <ListBox ItemsSource="{Binding Path=SelectedDirectory.Files}">
                        </ListBox>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Студенты">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Grid.Column="0" Header="Группы" Padding="5">
                        <DockPanel>
                            <!--<DockPanel.Resources>
                                <CollectionViewSource x:Key="GroupsCollection" Source="{Binding Path=Groups}"/>
                            </DockPanel.Resources>-->
                            <DockPanel DockPanel.Dock="Top" Margin="0,5">
                                <fa:ImageAwesome Icon="Solid_Search" Foreground="Green" Height="25" Margin="0,0,5,0" DockPanel.Dock="Left"/>
                                <Button DockPanel.Dock="Right" Margin="5,0,0,0" Command="{Binding Path=ClearGroupTextFilterCommand}" Height="25" Width="25" Cursor="Hand" ToolTip="Очистить фильтр">
                                    <fa:ImageAwesome Icon="Solid_Times" Foreground="Tomato" Height="15"/>
                                </Button>
                                <TextBox Text="{Binding Path=GroupTextFilter, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center" Height="25"/>
                            </DockPanel>
                            <UniformGrid DockPanel.Dock="Bottom" Rows="1" Margin="0,6,0,0">
                                <Button Style="{StaticResource AddButtonStyle}" Content="Добавить" Margin="0,0,3,0" Padding="5" Command="{Binding Path=CreateGroupCommand}"/>
                                <Button Style="{StaticResource RemoveButtonStyle}" Content="Удалить" Margin="3,0,0,0" Padding="5" Command="{Binding Path=RemoveGroupCommand}" CommandParameter="{Binding SelectedGroup}"/>
                            </UniformGrid>
                            <ListBox ItemsSource="{Binding Path=GroupsCollectionView}" SelectedItem="{Binding Path=SelectedGroup}" SelectedIndex="0">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="dec:Group">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="{Binding Path=Name}" x:Name="GroupName"/>
                                            <TextBlock Text="{Binding Path=Students.Count, StringFormat=' - [Студентов: {0}]'}"/>
                                        </StackPanel>
                                        <DataTemplate.Triggers>
                                            <DataTrigger Binding="{Binding Path=Students.Count}" Value="0">
                                                <Setter TargetName="GroupName" Property="Foreground" Value="Red"/>
                                            </DataTrigger>
                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </DockPanel>
                    </GroupBox>
                    <GroupBox Padding="5" Grid.Column="1" Header="{Binding Path=SelectedGroup.Name, FallbackValue=Студенты, TargetNullValue='Группа не выбрана'}">
                        <DockPanel>
                            <DockPanel DockPanel.Dock="Top" Margin="0,5">
                                <fa:ImageAwesome Icon="Solid_Search" Foreground="Green" Height="25" Margin="0,0,5,0" DockPanel.Dock="Left"/>
                                <Button DockPanel.Dock="Right" Margin="5,0,0,0" Command="{Binding Path=ClearStudentTextFilterCommand}" Height="25" Width="25" Cursor="Hand" ToolTip="Очистить фильтр">
                                    <fa:ImageAwesome Icon="Solid_Times" Foreground="Tomato" Height="15"/>
                                </Button>
                                <TextBox Text="{Binding Path=StudentTextFilter, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Center"/>
                            </DockPanel>
                            <DataGrid ItemsSource="{Binding Path=GroupStudentsCollectionView}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserDeleteRows="False" GridLinesVisibility="Vertical" VerticalGridLinesBrush="LightGray" AlternatingRowBackground="AliceBlue" SelectionMode="Single" HeadersVisibility="Column">
                                <DataGrid.Columns>
                                    <!--<DataGridTextColumn Header="Группа" Binding="{Binding DataContext.SelectedGroup.Name, RelativeSource={RelativeSource AncestorType=DataGrid}}"/>-->
                                    <DataGridTextColumn Header="Фамилия" Binding="{Binding Path=Surname}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Имя" Binding="{Binding Path=Name}" IsReadOnly="True"/>
                                    <DataGridTextColumn Header="Отчество" Binding="{Binding Path=Patronymic}" IsReadOnly="True"/>
                                    <!--<DataGridTextColumn Header="Рейтинг" Binding="{Binding Path=Rating}" IsReadOnly="True"/>-->
                                    <!--<DataGridTextColumn Header="Дата рождения" Binding="{Binding Path=Birthday, StringFormat=dd.MM.yyy}"/>-->
                                    <DataGridTemplateColumn Header="Рейтинг">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="dec:Student">
                                                <TextBlock Text="{Binding Path=Rating}" HorizontalAlignment="Center" x:Name="StudentRating"/>
                                                <DataTemplate.Triggers>
                                                    <DataTrigger Binding="{Binding Path=Rating}" Value="0">
                                                        <Setter TargetName="StudentRating" Property="Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTemplateColumn Header="Дата рождения">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate DataType="dec:Student">
                                                <TextBlock Text="{Binding Path=Birthday, StringFormat=dd.MM.yyyy}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                        <DataGridTemplateColumn.CellEditingTemplate>
                                            <DataTemplate DataType="dec:Student">
                                                <DatePicker SelectedDate="{Binding Path=Birthday}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellEditingTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Заметки" Binding="{Binding Description}" Width="*"/>
                                </DataGrid.Columns>
                            </DataGrid>
                        </DockPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="Разнотипные данные" Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="250"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <GroupBox Header="Список данных">
                        <ListBox ItemsSource="{Binding Path=CompositeCollection}" Margin="5" SelectedItem="{Binding Path=SelectedCompositeValue}" SelectedIndex="0" Resources="{StaticResource CompositeListItemsResourceDictionary}">
                            <!--<ListBox.Resources>
                                <ResourceDictionary Source="Resources/DataTemplates/CompositeItemsDataTemplates.xaml"/>
                            </ListBox.Resources>-->
                        </ListBox>
                    </GroupBox>
                    <GroupBox Grid.Column="1" Header="Подробная информация">
                        <ContentControl Content="{Binding Path=SelectedCompositeValue}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="30" Resources="{StaticResource CompositeItemsControlDataTemplates}"/>
                    </GroupBox>
                </Grid>
            </TabItem>
            <TabItem Header="График" Visibility="Collapsed">
                <Grid>
                    <!--<TextBox Height="20" Width="200" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" Text="{Binding Path=Title, UpdateSourceTrigger=PropertyChanged}"/>-->
                    <!--<Button Width="120" Height="30" Content="Установить статус" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10" Command="{Binding Path=SetStatusCommand}" CommandParameter="Работаю"/>-->
                    <oxy:Plot Title="Пример графика">
                        <oxy:Plot.Axes>
                            <oxy:LinearAxis Position="Left"/>
                            <oxy:LinearAxis Position="Bottom"/>
                        </oxy:Plot.Axes>
                        <oxy:LineSeries Color="Blue" ItemsSource="{Binding DataPoints}" DataFieldX="XValue" DataFieldY="YValue"/>
                    </oxy:Plot>
                </Grid>
            </TabItem>
            <TabItem Header="Тестовые элементы формы" Visibility="Collapsed">
                <Button Width="100" Height="30" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="50" Content="Кнопка 1" RenderTransformOrigin="0.5,0.5" Style="{StaticResource OrangeButtonStyle}">
                    <Button.Background>
                        <SolidColorBrush x:Name="ButtonBrush" Color="White"/>
                    </Button.Background>
                    <Button.RenderTransform>
                        <ScaleTransform x:Name="ButtonScale" ScaleX="1" ScaleY="1"/>
                    </Button.RenderTransform>
                    <Button.Triggers>
                        <EventTrigger RoutedEvent="Button.Click">
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale" Storyboard.TargetProperty="ScaleX" To="1.2" Duration="0:0:0.1" AutoReverse="True"/>
                                    <DoubleAnimation Storyboard.TargetName="ButtonScale" Storyboard.TargetProperty="ScaleY" To="1.2" Duration="0:0:0.1" AutoReverse="True"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                    </Button.Triggers>
                </Button>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
